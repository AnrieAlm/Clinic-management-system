<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Clinic Management System</title>
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            min-height: 100vh;
            color: #333;
        }
        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 20px;
        }
        .header {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 20px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
            text-align: center;
        }
        .header h1 {
            color: #4a5568;
            font-size: 2.5em;
            margin-bottom: 10px;
            font-weight: 700;
        }
        .user-info {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-top: 15px;
            padding-top: 15px;
            border-top: 1px solid #e2e8f0;
        }
        .role-badge {
            background: linear-gradient(45deg, #4299e1, #3182ce);
            color: white;
            padding: 8px 16px;
            border-radius: 20px;
            font-weight: 600;
            font-size: 0.9em;
        }
        .logout-btn {
            background: #e53e3e;
            color: white;
            padding: 8px 16px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
        }
        .logout-btn:hover {
            background: #c53030;
            transform: translateY(-2px);
        }
        .login-form {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 40px;
            max-width: 400px;
            margin: 50px auto;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        .login-form h2 {
            text-align: center;
            margin-bottom: 30px;
            color: #4a5568;
        }
        .form-group {
            margin-bottom: 20px;
        }
        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: #4a5568;
        }
        .form-group input,
        .form-group select,
        .form-group textarea {
            width: 100%;
            padding: 12px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
        }
        .form-group input:focus,
        .form-group select:focus,
        .form-group textarea:focus {
            outline: none;
            border-color: #4299e1;
            box-shadow: 0 0 0 3px rgba(66, 153, 225, 0.1);
        }
        .btn {
            background: linear-gradient(45deg, #4299e1, #3182ce);
            color: white;
            padding: 12px 24px;
            border: none;
            border-radius: 8px;
            cursor: pointer;
            font-size: 16px;
            font-weight: 600;
            transition: all 0.3s ease;
            width: 100%;
        }
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);
        }
        .btn-secondary {
            background: linear-gradient(45deg, #48bb78, #38a169);
            margin-top: 10px;
        }
        .btn-secondary:hover {
            box-shadow: 0 4px 12px rgba(72, 187, 120, 0.3);
        }
        .nav-tabs {
            display: flex;
            background: rgba(255, 255, 255, 0.95);
            border-radius: 15px;
            padding: 10px;
            margin-bottom: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        .nav-tab {
            flex: 1;
            padding: 15px;
            text-align: center;
            background: transparent;
            border: none;
            border-radius: 10px;
            cursor: pointer;
            font-weight: 600;
            transition: all 0.3s ease;
            color: #718096;
        }
        .nav-tab.active {
            background: linear-gradient(45deg, #4299e1, #3182ce);
            color: white;
            transform: translateY(-2px);
            box-shadow: 0 4px 12px rgba(66, 153, 225, 0.3);
        }
        .tab-content {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(10px);
            border-radius: 15px;
            padding: 30px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
        }
        .patient-grid,
        .appointment-grid {
            display: grid;
            gap: 20px;
            margin-top: 20px;
        }
        .patient-card,
        .appointment-card {
            background: #f7fafc;
            border: 1px solid #e2e8f0;
            border-radius: 12px;
            padding: 20px;
            transition: all 0.3s ease;
        }
        .patient-card:hover,
        .appointment-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
            border-color: #4299e1;
        }
        .patient-name {
            font-size: 1.2em;
            font-weight: 700;
            color: #2d3748;
            margin-bottom: 8px;
        }
        .patient-info {
            color: #718096;
            margin-bottom: 4px;
        }
        .appointment-time {
            font-weight: 600;
            color: #4299e1;
            font-size: 1.1em;
        }
        .status-badge {
            display: inline-block;
            padding: 4px 12px;
            border-radius: 20px;
            font-size: 0.8em;
            font-weight: 600;
            margin-top: 8px;
        }
        .status-scheduled {
            background: #bee3f8;
            color: #2b6cb0;
        }
        .status-completed {
            background: #c6f6d5;
            color: #276749;
        }
        .status-cancelled {
            background: #fed7d7;
            color: #c53030;
        }
        .modal {
            display: none;
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background: rgba(0, 0, 0, 0.5);
            backdrop-filter: blur(5px);
            z-index: 1000;
        }
        .modal-content {
            position: absolute;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background: white;
            border-radius: 15px;
            padding: 30px;
            max-width: 500px;
            width: 90%;
            max-height: 80vh;
            overflow-y: auto;
        }
        .modal-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
            padding-bottom: 15px;
            border-bottom: 1px solid #e2e8f0;
        }
        .close-btn {
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: #718096;
        }
        .search-box {
            width: 100%;
            padding: 12px;
            border: 2px solid #e2e8f0;
            border-radius: 8px;
            margin-bottom: 20px;
            font-size: 16px;
        }
        .hidden {
            display: none;
        }
        .form-row {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 15px;
        }
        @media (max-width: 768px) {
            .form-row {
                grid-template-columns: 1fr;
            }
            .nav-tabs {
                flex-direction: column;
            }
            .user-info {
                flex-direction: column;
                gap: 10px;
            }
        }
    </style>
</head>
<body>
    <!-- Login Form -->
    <div id="loginForm" class="login-form">
        <h2>Clinic Management System</h2>
        <div class="form-group">
            <label for="username">Username:</label>
            <input type="text" id="username" required />
        </div>
        <div class="form-group">
            <label for="password">Password:</label>
            <input type="password" id="password" required />
        </div>
        <div class="form-group">
            <label for="role">Role:</label>
            <select id="role" required>
                <option value="">Select Role</option>
                <option value="admin">Administrator</option>
                <option value="doctor">Doctor</option>
                <option value="nurse">Nurse</option>
                <option value="receptionist">Receptionist</option>
            </select>
        </div>
        <button class="btn" onclick="login()">Login</button>
        <div style="margin-top: 20px; padding-top: 20px; border-top: 1px solid #e2e8f0; font-size: 0.9em; color: #718096;">
            <strong>Demo Credentials:</strong><br />
            Username: admin, Password: admin123, Role: Administrator<br />
            Username: doctor, Password: doc123, Role: Doctor<br />
            Username: nurse, Password: nurse123, Role: Nurse
        </div>
    </div>

    <!-- Main Application -->
    <div id="mainApp" class="container hidden">
        <div class="header">
            <h1>üè• Clinic Management System</h1>
            <div class="user-info">
                <span>Welcome, <strong id="currentUser"></strong>!</span>
                <span class="role-badge" id="currentRole"></span>
                <button class="logout-btn" onclick="logout()">Logout</button>
            </div>
        </div>
        <div class="nav-tabs">
            <button class="nav-tab active" onclick="showTab('patients', event)">üë• Patients</button>
            <button class="nav-tab" onclick="showTab('appointments', event)">üìÖ Appointments</button>
            <button class="nav-tab" onclick="showTab('records', event)">üìã Medical Records</button>
            <button class="nav-tab" onclick="showTab('reports', event)" id="reportsTabBtn">üìä Reports</button>
        </div>

        <!-- Patients Tab -->
        <div id="patientsTab" class="tab-content">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                <h2>Patient Management</h2>
                <button class="btn" onclick="showModal('patientModal')" style="width: auto;">‚ûï Add New Patient</button>
            </div>
            <input type="text" class="search-box" placeholder="Search patients..." onkeyup="searchPatients(this.value)" />
            <div id="patientsList" class="patient-grid"></div>
        </div>

        <!-- Appointments Tab -->
        <div id="appointmentsTab" class="tab-content hidden">
            <div style="display: flex; justify-content: space-between; align-items: center; margin-bottom: 20px;">
                <h2>Appointment Management</h2>
                <button class="btn" onclick="showModal('appointmentModal')" style="width: auto;">‚ûï Schedule Appointment</button>
            </div>
            <input type="text" class="search-box" placeholder="Search appointments..." onkeyup="searchAppointments(this.value)" />
            <div id="appointmentsList" class="appointment-grid"></div>
        </div>

        <!-- Medical Records Tab -->
        <div id="recordsTab" class="tab-content hidden">
            <h2>Medical Records</h2>
            <input type="text" class="search-box" placeholder="Search medical records..." onkeyup="searchRecords(this.value)" />
            <div id="recordsList"></div>
        </div>

        <!-- Reports Tab -->
        <div id="reportsContent" class="tab-content hidden">
            <h2>Reports & Analytics</h2>
            <div style="display: grid; grid-template-columns: repeat(auto-fit, minmax(250px, 1fr)); gap: 20px; margin-top: 20px;">
                <div class="patient-card">
                    <h3>üìä Patient Statistics</h3>
                    <p>Total Patients: <strong id="totalPatients">0</strong></p>
                    <p>New This Month: <strong id="newPatients">0</strong></p>
                </div>
                <div class="patient-card">
                    <h3>üìÖ Appointment Statistics</h3>
                    <p>Total Appointments: <strong id="totalAppointments">0</strong></p>
                    <p>Today's Appointments: <strong id="todayAppointments">0</strong></p>
                </div>
                <div class="patient-card">
                    <h3>üè• Clinic Overview</h3>
                    <p>Active Doctors: <strong>3</strong></p>
                    <p>Available Rooms: <strong>8</strong></p>
                </div>
            </div>
        </div>
    </div>

    <!-- Patient Modal -->
    <div id="patientModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Add New Patient</h3>
                <button class="close-btn" onclick="hideModal('patientModal')">&times;</button>
            </div>
            <form onsubmit="addPatient(event)">
                <div class="form-row">
                    <div class="form-group">
                        <label for="patientFirstName">First Name:</label>
                        <input type="text" id="patientFirstName" required />
                    </div>
                    <div class="form-group">
                        <label for="patientLastName">Last Name:</label>
                        <input type="text" id="patientLastName" required />
                    </div>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="patientDOB">Date of Birth:</label>
                        <input type="date" id="patientDOB" required />
                    </div>
                    <div class="form-group">
                        <label for="patientGender">Gender:</label>
                        <select id="patientGender" required>
                            <option value="">Select Gender</option>
                            <option value="Male">Male</option>
                            <option value="Female">Female</option>
                            <option value="Other">Other</option>
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label for="patientPhone">Phone:</label>
                    <input type="tel" id="patientPhone" required />
                </div>
                <div class="form-group">
                    <label for="patientEmail">Email:</label>
                    <input type="email" id="patientEmail" />
                </div>
                <div class="form-group">
                    <label for="patientAddress">Address:</label>
                    <textarea id="patientAddress" rows="3"></textarea>
                </div>
                <div class="form-group">
                    <label for="patientEmergencyContact">Emergency Contact:</label>
                    <input type="text" id="patientEmergencyContact" />
                </div>
                <button type="submit" class="btn">Add Patient</button>
            </form>
        </div>
    </div>

    <!-- Appointment Modal -->
    <div id="appointmentModal" class="modal">
        <div class="modal-content">
            <div class="modal-header">
                <h3>Schedule Appointment</h3>
                <button class="close-btn" onclick="hideModal('appointmentModal')">&times;</button>
            </div>
            <form onsubmit="addAppointment(event)">
                <div class="form-group">
                    <label for="appointmentPatient">Patient:</label>
                    <select id="appointmentPatient" required>
                        <option value="">Select Patient</option>
                    </select>
                </div>
                <div class="form-row">
                    <div class="form-group">
                        <label for="appointmentDate">Date:</label>
                        <input type="date" id="appointmentDate" required />
                    </div>
                    <div class="form-group">
                        <label for="appointmentTime">Time:</label>
                        <input type="time" id="appointmentTime" required />
                    </div>
                </div>
                <div class="form-group">
                    <label for="appointmentDoctor">Doctor:</label>
                    <select id="appointmentDoctor" required>
                        <option value="">Select Doctor</option>
                    </select>
                </div>
                <div class="form-group">
                    <label for="appointmentReason">Reason for Visit:</label>
                    <textarea id="appointmentReason" rows="3" required></textarea>
                </div>
                <button type="submit" class="btn">Schedule Appointment</button>
            </form>
        </div>
    </div>

    <script>
        // Data storage (in a real application, this would be a database)
        let patients = [
            {
                id: 1,
                firstName: "John",
                lastName: "Doe",
                dob: "1985-06-15",
                gender: "Male",
                phone: "555-0123",
                email: "john.doe@email.com",
                address: "123 Main St, City, State",
                emergencyContact: "Jane Doe - 555-0124",
                dateAdded: new Date().toISOString(),
            },
            {
                id: 2,
                firstName: "Sarah",
                lastName: "Johnson",
                dob: "1990-03-22",
                gender: "Female",
                phone: "555-0125",
                email: "sarah.johnson@email.com",
                address: "456 Oak Ave, City, State",
                emergencyContact: "Mike Johnson - 555-0126",
                dateAdded: new Date().toISOString(),
            },
        ];
        let appointments = [
            {
                id: 1,
                patientId: 1,
                patientName: "John O'Conner",
                date: "2025-06-02",
                time: "10:00",
                doctor: "Dr. Smith",
                reason: "Annual checkup",
                status: "scheduled",
            },
            {
                id: 2,
                patientId: 2,
                patientName: "Sarah Dufy",
                date: "2025-06-01",
                time: "14:30",
                doctor: "Dr. Johnson",
                reason: "Follow-up consultation",
                status: "completed",
            },
        ];
        let doctors = [
            { name: "Dr. Mateo", specialty: "General Medicine" },
            { name: "Dr. Johnson", specialty: "Pediatrics" },
            { name: "Dr. Williams", specialty: "Cardiology" },
        ];

        let currentUser = null;
        let currentRole = null;

        function login() {
            const username = document.getElementById("username").value;
            const password = document.getElementById("password").value;
            const role = document.getElementById("role").value;

            const validCredentials = {
                admin: { password: "admin123", role: "admin" },
                doctor: { password: "doc123", role: "doctor" },
                nurse: { password: "nurse123", role: "nurse" },
                receptionist: { password: "rec123", role: "receptionist" },
            };

            if (
                validCredentials[username] &&
                validCredentials[username].password === password &&
                validCredentials[username].role === role
            ) {
                currentUser = username;
                currentRole = role;
                document.getElementById("loginForm").classList.add("hidden");
                document.getElementById("mainApp").classList.remove("hidden");
                document.getElementById("currentUser").textContent = username;
                document.getElementById("currentRole").textContent =
                    role.charAt(0).toUpperCase() + role.slice(1);

                if (role !== "admin") {
                    document.getElementById("reportsTabBtn").style.display = "none";
                } else {
                    document.getElementById("reportsTabBtn").style.display = "inline-block";
                }

                loadPatients();
                loadAppointments();
                updateReports();
                showTab("patients", { target: document.querySelector("[onclick='showTab(\"patients\", event)']") });
            } else {
                alert("Invalid credentials. Please try again.");
            }
        }

        function logout() {
            currentUser = null;
            currentRole = null;
            document.getElementById("loginForm").classList.remove("hidden");
            document.getElementById("mainApp").classList.add("hidden");

            document.getElementById("username").value = "";
            document.getElementById("password").value = "";
            document.getElementById("role").value = "";
        }

  function showTab(tabName, event) {
    const tabs = ["patients", "appointments", "records", "reports"];
    tabs.forEach((tab) => {
        const element = document.getElementById(tab + "Tab");
        if (element) element.classList.add("hidden");
    });

    document.querySelectorAll(".nav-tab").forEach((tab) => {
        tab.classList.remove("active");
    });

    const selectedTab = document.getElementById(tabName + "Tab");
    if (selectedTab) selectedTab.classList.remove("hidden");

    if (event && event.target) {
        event.target.classList.add("active");
    }
}
        function showModal(modalId) {
            document.getElementById(modalId).style.display = "block";
            if (modalId === "appointmentModal") {
                populatePatientSelect();
                populateDoctorSelect();
            }
        }

        function hideModal(modalId) {
            document.getElementById(modalId).style.display = "none";
        }

        function loadPatients() {
            const patientsList = document.getElementById("patientsList");
            patientsList.innerHTML = "";

            patients.forEach((patient) => {
                const patientCard = document.createElement("div");
                patientCard.className = "patient-card";
                patientCard.innerHTML = `
                    <div class="patient-name">${patient.firstName} ${patient.lastName}</div>
                    <div class="patient-info">üìÖ DOB: ${formatDate(patient.dob)}</div>
                    <div class="patient-info">‚ö§ Gender: ${patient.gender}</div>
                    <div class="patient-info">üìû Phone: ${patient.phone}</div>
                    <div class="patient-info">üìß Email: ${patient.email || "Not provided"}</div>
                    <div class="patient-info">üè† Address: ${patient.address || "Not provided"}</div>
                    <div class="patient-info">üö® Emergency: ${
                        patient.emergencyContact || "Not provided"
                    }</div>
                `;
                patientsList.appendChild(patientCard);
            });
        }

        function addPatient(event) {
            event.preventDefault();

            const newPatient = {
                id: patients.length ? Math.max(...patients.map(p => p.id)) + 1 : 1,
                firstName: document.getElementById("patientFirstName").value.trim(),
                lastName: document.getElementById("patientLastName").value.trim(),
                dob: document.getElementById("patientDOB").value,
                gender: document.getElementById("patientGender").value,
                phone: document.getElementById("patientPhone").value.trim(),
                email: document.getElementById("patientEmail").value.trim(),
                address: document.getElementById("patientAddress").value.trim(),
                emergencyContact: document.getElementById("patientEmergencyContact").value.trim(),
                dateAdded: new Date().toISOString(),
            };

            patients.push(newPatient);
            loadPatients();
            hideModal("patientModal");
            document.querySelector("#patientModal form").reset();
            updateReports();
            alert("Patient added successfully!");
        }

        function searchPatients(query) {
            const patientCards = document.querySelectorAll("#patientsList .patient-card");
            patientCards.forEach((card) => {
                const text = card.textContent.toLowerCase();
                card.style.display = text.includes(query.toLowerCase()) ? "block" : "none";
            });
        }

        function loadAppointments() {
            const appointmentsList = document.getElementById("appointmentsList");
            appointmentsList.innerHTML = "";

            appointments.forEach((appointment) => {
                const appointmentCard = document.createElement("div");
                appointmentCard.className = "appointment-card";
                appointmentCard.innerHTML = `
                    <div class="patient-name">üë§ ${appointment.patientName}</div>
                    <div class="appointment-time">üïê ${formatDate(appointment.date)} at ${appointment.time}</div>
                    <div class="patient-info">üë®‚Äç‚öïÔ∏è Doctor: ${appointment.doctor}</div>
                    <div class="patient-info">üìù Reason: ${appointment.reason}</div>
                    <span class="status-badge status-${appointment.status}">${appointment.status.toUpperCase()}</span>
                `;
                appointmentsList.appendChild(appointmentCard);
            });
        }

        function populatePatientSelect() {
            const select = document.getElementById("appointmentPatient");
            select.innerHTML = '<option value="">Select Patient</option>';
            patients.forEach((patient) => {
                const option = document.createElement("option");
                option.value = patient.id;
                option.textContent = `${patient.firstName} ${patient.lastName}`;
                select.appendChild(option);
            });
        }

        function populateDoctorSelect() {
            const select = document.getElementById("appointmentDoctor");
            select.innerHTML = '<option value="">Select Doctor</option>';
            doctors.forEach((doctor) => {
                const option = document.createElement("option");
                option.value = doctor.name;
                option.textContent = `${doctor.name} - ${doctor.specialty}`;
                select.appendChild(option);
            });
        }

        function addAppointment(event) {
            event.preventDefault();

            if (!patients.length) {
                alert("No patients available. Please add a patient first.");
                return;
            }

            const patientId = parseInt(document.getElementById("appointmentPatient").value);
            const patient = patients.find((p) => p.id === patientId);
            if (!patient) {
                alert("Please select a valid patient.");
                return;
            }

            const newAppointment = {
                id: appointments.length ? Math.max(...appointments.map(a => a.id)) + 1 : 1,
                patientId: patientId,
                patientName: `${patient.firstName} ${patient.lastName}`,
                date: document.getElementById("appointmentDate").value,
                time: document.getElementById("appointmentTime").value,
                doctor: document.getElementById("appointmentDoctor").value,
                reason: document.getElementById("appointmentReason").value,
                status: "scheduled",
            };

            appointments.push(newAppointment);
            loadAppointments();
            hideModal("appointmentModal");
            document.querySelector("#appointmentModal form").reset();
            updateReports();
            alert("Appointment scheduled successfully!");
        }

        function searchAppointments(query) {
            const appointmentCards = document.querySelectorAll("#appointmentsList .appointment-card");
            appointmentCards.forEach((card) => {
                const text = card.textContent.toLowerCase();
                card.style.display = text.includes(query.toLowerCase()) ? "block" : "none";
            });
        }

        function searchRecords(query) {
            const recordsList = document.getElementById("recordsList");
            recordsList.innerHTML = `
                <div class="patient-card">
                    <h3>üìã Medical Records</h3>
                    <p>This section would contain detailed medical records for each patient.</p>
                    <p>In a full implementation, this would be integrated with the database to show actual medical records with proper security and HIPAA compliance.</p>
                </div>
            `;
        }

        function updateReports() {
            document.getElementById("totalPatients").textContent = patients.length;
            document.getElementById("totalAppointments").textContent = appointments.length;

            const thisMonth = new Date().getMonth();
            const newThisMonth = patients.filter((patient) => {
                const patientMonth = new Date(patient.dateAdded).getMonth();
                return patientMonth === thisMonth;
            }).length;
            document.getElementById("newPatients").textContent = newThisMonth;

            const today = new Date().toISOString().split("T")[0];
            const todayAppointments = appointments.filter(
                (apt) => apt.date === today
            ).length;
            document.getElementById("todayAppointments").textContent = todayAppointments;
        }

        function formatDate(dateString) {
            const date = new Date(dateString);
            return date.toLocaleDateString("en-US", {
                year: "numeric",
                month: "short",
                day: "numeric",
            });
        }

        document.addEventListener("DOMContentLoaded", function () {
            const today = new Date().toISOString().split("T")[0];
            document.getElementById("appointmentDate").setAttribute("min", today);
            searchRecords("");
        });

        window.addEventListener("click", function (event) {
            const modals = document.querySelectorAll(".modal");
            modals.forEach((modal) => {
                if (event.target === modal) {
                    modal.style.display = "none";
                }
            });
        });

        document.addEventListener("keypress", function (event) {
            if (
                event.key === "Enter" &&
                !document.getElementById("loginForm").classList.contains("hidden")
            ) {
                login();
            }
        });
    </script>
</body>
</html>
